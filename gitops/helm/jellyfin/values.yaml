# Default values for jellyfin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: ghcr.io/jellyfin/jellyfin
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "unstable"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  DOTNET_SYSTEM_IO_DISABLEFILELOCKING: 'True'


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

podAnnotations: {}
  # openshift.io/required-scc: anyuid

podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  allowPrivilegeEscalation: true
  runAsNonRoot: false
  # allowPrivilegeEscalation: false
  # runAsNonRoot: true
  # capabilities:
  #   drop: ["ALL"]
  # seccompProfile:
  #   type: RuntimeDefault

service:
  type: NodePort
  port: 8096

ingress:
  enabled: true
  className: openshift-default
  annotations:
    route.openshift.io/termination: edge
    cert-manager.io/cluster-issuer: letsencrypt
    # cert-manager.io/private-key-rotation-policy: always
    external-dns.alpha.kubernetes.io/hostname: jellyfin.hknlab.io
    external-dns.alpha.kubernetes.io/target: dyn4.hknlab.io
    # acme.cert-manager.io/http01-ingress-class: openshift-default
  hosts:
    - host: jellyfin.hknlab.io
      paths:
        - path: /
          pathType: ImplementationSpecific
    - host: jellyfin.apps.hub.ocp4.hkn.lab
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - hosts:
       - jellyfin.hknlab.io
      secretName: jellyfin-tls

persistentVolumeClaims:
  media:
    enabled: false
    accessModes:
      - ReadWriteMany
    storageSize: 5Ti
    storageClassName: ""
    existingVolumeName: nfs-media
  movies:
    enabled: true
    accessModes:
      - ReadWriteMany
    storageSize: 5Ti
    storageClassName: ""
    existingVolumeName: nfs-media-movies
  tv:
    enabled: true
    accessModes:
      - ReadWriteMany
    storageSize: 5Ti
    storageClassName: ""
    existingVolumeName: nfs-media-tv
  config:
    enabled: true
    accessModes:
      - ReadWriteMany
    storageSize: 1Gi
    storageClassName: ""
    existingVolumeName: nfs-jellyfin-config

resources:
  limits:
    cpu: 6000m
    memory: 8Gi
  requests:
    cpu: 4000m
    memory: 4Gi

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 6000m
  #   memory: 8Gi
  # requests:
  #   cpu: 4000m
  #   memory: 4Gi

livenessProbe: null
  # httpGet:
  #   path: /health
  #   port: http
readinessProbe: null
  # httpGet:
  #   path: /health
  #   port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: temp
    emptyDir:
      sizeLimit: 15Gi
  - name: cache
    emptyDir:
      sizeLimit: 15Gi

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: temp
    mountPath: /tmp/jellyfin
  - name: cache
    mountPath: /cache
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
