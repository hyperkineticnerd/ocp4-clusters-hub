# Default values for unifi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: jacobalberty/unifi
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v9.0.108"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

env:
  TZ: America/Denver

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations:
  openshift.io/required-scc: "anyuid" 
  k8s.v1.cni.cncf.io/networks: |-
    [
      {
        "name": "network-vlan",
        "ips": [
          "172.16.2.200/24"
        ],
        "default-route": [
          "172.16.2.254"
        ]
      }
    ]

# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  fsGroup: 999

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 999

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  http:
    type: ClusterIP
    port: 8080
    protocol: TCP
  https:
    type: ClusterIP
    port: 8443
    protocol: TCP
  portal-http:
    type: ClusterIP
    port: 8880
    protocol: TCP
  portal-https:
    type: ClusterIP
    port: 8843
    protocol: TCP
  stun:
    type: NodePort
    port: 3478
    protocol: UDP
  speedtest:
    type: NodePort
    port: 6789
    protocol: TCP
  discovery:
    type: NodePort
    port: 10001
    protocol: UDP

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "openshift-default"
  annotations:
    route.openshift.io/termination: passthrough
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: unifi.apps.hub.ocp4.hkn.lab
      paths:
        - pathType: ImplementationSpecific
          # path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

storage:
  data:
    claimName: ""
    volumeName: ""
    storageClassName: ""
  log:
    claimName: ""
    volumeName: ""
    storageClassName: ""
  run:
    claimName: ""
    volumeName: ""
    storageClassName: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   {{- toYaml .Values.livenessProbe | nindent 12 }}
# readinessProbe:
#   {{- toYaml .Values.readinessProbe | nindent 12 }}
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
