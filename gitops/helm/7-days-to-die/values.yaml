# Default values for 7-days-to-die.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: docker.io/vinanrra/7dtd-server
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

env:
  START_MODE: 1                 # Change between START MODES
  VERSION: stable               # Change between 7 days to die versions
  PUID: 1000                    # Remember to use same as your user
  PGID: 1000                    # Remember to use same as your user
  TimeZone: Europe/Madrid       # Optional - Change Timezone
  TEST_ALERT: NO                # Optional - Send a test alert
  UPDATE_MODS: NO               # Optional - This will allow mods to be update on start, each mod also need to have XXXX_UPDATE: YES to update on start
  MODS_URLS: ""                 # Optional - Mods urls to install, must be ZIP or RAR.
  ALLOC_FIXES: NO               # Optional - Install ALLOC FIXES
  ALLOC_FIXES_UPDATE: NO        # Optional - Update Allocs Fixes before server start
  UNDEAD_LEGACY: NO             # Optional - Install Undead Legacy mod, if DARKNESS_FALLS it's enable will not install anything
  UNDEAD_LEGACY_VERSION: stable # Optional - Undead Legacy version
  UNDEAD_LEGACY_UPDATE: NO      # Optional - Update Undead Legacy mod before server start
  DARKNESS_FALLS: NO            # Optional - Install Darkness Falls mod, if UNDEAD_LEGACY it's enable will not install anything
  DARKNESS_FALLS_UPDATE: NO     # Optional - Update Darkness Falls mod before server start
  DARKNESS_FALLS_URL: False     # Optional - Install the provided Darkness Falls url
  CPM: NO                       # Optional - CSMM Patron's Mod (CPM)
  CPM_UPDATE: NO                # Optional - Update CPM before server start
  BEPINEX: NO                   # Optional - BepInEx
  BEPINEX_UPDATE: NO            # Optional - Update BepInEx before server start
  BACKUP: NO                    # Optional - Backup server
  BACKUP_HOUR: 5                # Optional - Backup hour 0-23
  BACKUP_MAX: 7                 # Optional - Max backups to keep
  MONITOR: NO                   # Optional - Keeps server up if crash

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: NodePort
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
